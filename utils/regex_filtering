{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"regex_filtering","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"52ZWQBFx4Q11","colab_type":"code","outputId":"1fb845f1-981e-401a-a982-6d7e4ec3050f","executionInfo":{"status":"ok","timestamp":1558613437486,"user_tz":-480,"elapsed":22153,"user":{"displayName":"Kenneth Lee","photoUrl":"","userId":"12092675826143028048"}},"colab":{"base_uri":"https://localhost:8080/","height":138}},"source":["\"\"\"Outputs file where every kb line that does not contain gold entities to be filtered\"\"\"\n","\"\"\"Should be the highest standard of what our filtering model can achieve\"\"\"\n","from google.colab import drive\n","drive.mount('/content/gdrive',force_remount=True)\n","%cd gdrive/My\\ Drive/Colab\\ Notebooks/BIIS_Project"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n","/content/gdrive/My Drive/Colab Notebooks/BIIS_Project\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Rp8o35cc4X2W","colab_type":"code","colab":{}},"source":["import re\n","import string\n","import ast"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"TXjBbJeE4gq-","colab_type":"code","colab":{}},"source":["train_source_file_directory= 'Data/KVR/train.txt'\n","train_target_file_directory= 'Data/KVR/train_regex_filtered.txt'\n","dev_source_file_directory= 'Data/KVR/dev.txt'\n","dev_target_file_directory= 'Data/KVR/dev_regex_filtered.txt'\n","test_source_file_directory= 'Data/KVR/test.txt'\n","test_target_file_directory= 'Data/KVR/test_regex_filtered.txt'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QZiB1xep4_kB","colab_type":"code","colab":{}},"source":["def filter_text(source_file,target_file):\n","  with open(source_file,'r') as reader, open (target_file,'w') as writer:\n","    target_text=\"\"\n","    source_text=reader.read()\n","\n","    split_dialogue_regex= re.compile('\\n\\n')\n","    split_line_regex= re.compile('\\n')\n","    match_dialogue_regex= re.compile('^[1-9]\\d*$')\n","    find_gold_regex = re.compile('\\[(.*?)\\]')\n","\n","    dialogues= split_dialogue_regex.split(source_text)\n","\n","    for dialogue in dialogues:\n","      gold_entities_set= set()\n","      target_text_dialogue=\"\"\n","      kb_sentences_list=[]\n","      kb_sentences=\"\"\n","      dialogue_sentences =\"\"\n","\n","\n","      lines = split_line_regex.split(dialogue)\n","\n","      for line in lines:\n","        line=line.strip()\n","        if line:\n","\n","          if '#' in line:\n","            target_text_dialogue += line + '\\n'\n","            continue\n","\n","          line_indicator, sentence = line.split(' ',1)\n","          if line_indicator == '0':\n","            kb_sentences_list.append(sentence)\n","\n","\n","          if match_dialogue_regex.match(line_indicator):\n","            gold_entities_string=find_gold_regex.findall(sentence)\n","            gold_entities_list = gold_entities_string[0].replace(\"'\",\"\").split(', ')\n","            for entity in gold_entities_list:\n","              if(entity != ''):\n","                gold_entities_set.add(entity)\n","      #         print(gold_entities_set)\n","\n","            dialogue_sentences += line_indicator + ' ' + sentence + '\\n'\n","\n","      for kb_sentence in kb_sentences_list:\n","        for gold_entity in gold_entities_set:\n","          if gold_entity in kb_sentence:\n","            kb_sentences+='0 '+ kb_sentence+ '\\n'\n","            break\n","\n","      target_text_dialogue+= kb_sentences + dialogue_sentences+'\\n'\n","      target_text+= target_text_dialogue\n","\n","    writer.write(target_text)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kyRtqHhstgk5","colab_type":"code","colab":{}},"source":["filter_text(train_source_file_directory,train_target_file_directory)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jzASRKLwt0Ls","colab_type":"code","colab":{}},"source":["filter_text(dev_source_file_directory,dev_target_file_directory)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"oACDJm16t5JN","colab_type":"code","colab":{}},"source":["filter_text(test_source_file_directory,test_target_file_directory)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"VDiUF-cEmfh-","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}